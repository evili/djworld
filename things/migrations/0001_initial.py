# Generated by Django 3.2.12 on 2022-04-09 16:07

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Moss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alive', models.BooleanField(default=True)),
                ('energy', models.FloatField(default=3.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('min_energy_son', models.FloatField(default=4.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('energy_son', models.FloatField(default=0.25, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('spread', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sun_power', models.FloatField(default=2.0, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('entropy', models.FloatField(default=0.125, validators=[django.core.validators.MinValueValidator(0.015625), django.core.validators.MaxValueValidator(0.984375)])),
            ],
        ),
        migrations.AddConstraint(
            model_name='world',
            constraint=models.CheckConstraint(check=models.Q(('sun_power__gt', django.db.models.expressions.CombinedExpression(django.db.models.expressions.Value(1.0), '/', django.db.models.expressions.CombinedExpression(django.db.models.expressions.Value(1.0), '-', django.db.models.expressions.F('entropy'))))), name='enough_power_for_entropy'),
        ),
        migrations.AddConstraint(
            model_name='world',
            constraint=models.CheckConstraint(check=models.Q(('entropy__gt', 0.0), ('entropy__lt', 1.0)), name='entropy_between_0_and_1'),
        ),
        migrations.AddConstraint(
            model_name='world',
            constraint=models.CheckConstraint(check=models.Q(('sun_power__gt', 0.0)), name='sun_power_positive'),
        ),
        migrations.AlterUniqueTogether(
            name='position',
            unique_together={('x', 'y')},
        ),
        migrations.AddField(
            model_name='moss',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='things.position'),
        ),
        migrations.AddField(
            model_name='moss',
            name='world',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.world'),
        ),
        migrations.AddConstraint(
            model_name='moss',
            constraint=models.CheckConstraint(check=models.Q(('energy__gte', 0.0)), name='energy_positive'),
        ),
        migrations.AddConstraint(
            model_name='moss',
            constraint=models.CheckConstraint(check=models.Q(('energy_son__gt', 0.0), ('energy_son__lt', 1.0)), name='energy_son_between_0_and_1'),
        ),
        migrations.AddConstraint(
            model_name='moss',
            constraint=models.CheckConstraint(check=models.Q(('min_energy_son__gt', 2.0)), name='min_energy_son_greater_than_two'),
        ),
    ]
